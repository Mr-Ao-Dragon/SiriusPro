import{w as p,u as I,bP as m,ck as E,A as f,ag as N,ae as d,b8 as _,b9 as h,e as r,f as T,aP as j,aB as y}from"./index-12833456.js";const D="update:modelValue",V="change",F="input",K=({from:u,replacement:e,scope:n,version:s,ref:a,type:o="API"},l)=>{p(()=>I(l),t=>{},{immediate:!0})},v={prefix:Math.floor(Math.random()*1e4),current:0},P=Symbol("elIdInjection"),U=()=>N()?d(P,v):v,w=u=>{const e=U(),n=m("namespace",E);return f(()=>I(u)||`${n.value}-id-${e.prefix}-${e.current++}`)},R=()=>{const u=d(_,void 0),e=d(h,void 0);return{form:u,formItem:e}},$=(u,{formItemContext:e,disableIdGeneration:n,disableIdManagement:s})=>{n||(n=r(!1)),s||(s=r(!1));const a=r();let o;const l=f(()=>{var t;return!!(!u.label&&e&&e.inputIds&&((t=e.inputIds)==null?void 0:t.length)<=1)});return T(()=>{o=p([j(u,"id"),n],([t,i])=>{const c=t??(i?void 0:w().value);c!==a.value&&(e!=null&&e.removeInputId&&(a.value&&e.removeInputId(a.value),!(s!=null&&s.value)&&!i&&c&&e.addInputId(c)),a.value=c)},{immediate:!0})}),y(()=>{o&&o(),e!=null&&e.removeInputId&&a.value&&e.removeInputId(a.value)}),{isLabeledByFormItem:l,inputId:a}};export{V as C,F as I,D as U,K as a,$ as b,w as c,U as d,R as u};
